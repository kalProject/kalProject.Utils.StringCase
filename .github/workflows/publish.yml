name: Publish

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: read
  packages: write

jobs:
  pack-and-push:
    name: Pack and Publish to GitHub Packages
    runs-on: windows-latest
    env:
      NUGET_API_KEY: ${{ secrets.NUGET_API_KEY }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: 8.0.x

      - name: Set version from tag
        id: version
        shell: pwsh
        run: |
          $tag = $env:GITHUB_REF_NAME
          # Strip leading 'v' if present
          if ($tag.StartsWith('v')) { $tag = $tag.Substring(1) }
          echo "Detected version: $tag"
          echo "version=$tag" >> $env:GITHUB_OUTPUT

      - name: Restore
        run: dotnet restore "kalProject.Utils.StringCase.sln"

      - name: Build
        run: dotnet build "kalProject.Utils.StringCase.sln" -c Release --no-restore

      - name: Pack
        run: dotnet pack "StringCase/kalProject.Utils.StringCase.csproj" -c Release -o "artifacts" /p:PackageVersion=${{ steps.version.outputs.version }} --no-build

      - name: Publish to GitHub Packages
        run: dotnet nuget push "artifacts/*.nupkg" --source "https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json" --api-key ${{ secrets.GITHUB_TOKEN }} --skip-duplicate

      - name: Publish to NuGet.org
        if: ${{ env.NUGET_API_KEY != '' }}
        shell: pwsh
        run: |
          dotnet nuget push "artifacts/*.nupkg" --source "https://api.nuget.org/v3/index.json" --api-key "$env:NUGET_API_KEY" --skip-duplicate
          dotnet nuget push "artifacts/*.snupkg" --source "https://api.nuget.org/v3/index.json" --api-key "$env:NUGET_API_KEY" --skip-duplicate
